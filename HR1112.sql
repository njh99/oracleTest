--Susan 부서아이디 보기
SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Susan'; 
--부서테이블에서 40번 부서명을 조회
SELECT DEPARTMENT_NAME FROM departments WHERE DEPARTMENT_ID = 40;
--Susan 소속 되어있는 부서명을 검색
SELECT * FROM EMPLOYEES WHERE FIRST_NAME = 'Susan';
SELECT * FROM DEPARTMENTS WHERE DEPARTMENT_ID = 40;

--서브 쿼리문
SELECT DEPARTMENT_NAME FROM departments WHERE DEPARTMENT_ID =
(SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Susan');

SELECT E.FIRST_NAME, D.DEPARTMENT_ID FROM DEPARTMENTS D INNER JOIN EMPLOYEES E ON D.DEPARTMENT_ID = E. DEPARTMENT_ID 
WHERE UPPER(FIRST_NAME) = UPPER('Susan');

SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE FIRST_NAME ='Susan';
--단일행은 비교, 크기, 연산이 가능하다.
--다중행은 비교, 크기 , 연산이 불가능하다.(IN=OR, ANY=1개이상, ALL=모두 맞아야함 ,EXISTS= 존재하는가) 전부 TRUE 아님 FALSE
SELECT * FROM DEPARTMENTS WHERE DEPARTMENT_ID = 
(SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE FIRST_NAME ='Susan');

SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Lex';
SELECT FIRST_NAME, TO_CHAR(HIRE_DATE,'YYYY-MM-DD') FROM EMPLOYEES WHERE DEPARTMENT_ID =(SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Lex');

--EMPLOYEES 테이블에서 CEO에게 보고하는 직원의 모든정보 출력
SELECT * FROM EMPLOYEES 
WHERE manager_id = (SELECT employee_id FROM EMPLOYEES WHERE MANAGER_ID IS NULL);

--고용테이블에서 전체연봉평균
SELECT ROUND(AVG(SALARY),0) AS "평균연봉" FROM EMPLOYEES;
--전체 평균 연봉보다 높은 사람의 정보를 출력
SELECT * FROM EMPLOYEES WHERE SALARY > (SELECT ROUND(AVG(SALARY),0) AS SALARY FROM EMPLOYEES);
--다중행 비교
SELECT ROUND(AVG(SALARY),0) AS "평균연봉" FROM EMPLOYEES GROUP BY department_id;
SELECT * FROM EMPLOYEES WHERE EXISTS(SELECT ROUND(AVG(SALARY),0) AS SALARY FROM EMPLOYEES  GROUP BY department_id);

--테이블 복사
CREATE TABLE IMSITBL
AS 
SELECT * FROM EMPLOYEES WHERE 1=1;
SELECT * FROM IMSITBL;
DROP TABLE IMSITBL;

SELECT * FROM user_constraints WHERE UPPER(TABLE_NAME) =UPPER('IMSITBL'); 


--월급이 13000이상인 사람의 부서를 보여주세요
SELECT DISTINCT DEPARTMENT_ID FROM EMPLOYEES WHERE SALARY >=13000;

SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID IN (90,80,20);
--서브쿼리
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID IN (SELECT DISTINCT DEPARTMENT_ID FROM EMPLOYEES WHERE SALARY >=13000);


SELECT SALARY FROM EMPLOYEES WHERE UPPER(FIRST_NAME) = UPPER('Susan') OR UPPER(FIRST_NAME) = UPPER('LEX');

--
SELECT * FROM EMPLOYEES WHERE SALARY IN
(SELECT SALARY FROM EMPLOYEES WHERE UPPER(FIRST_NAME) = UPPER('Susan') OR UPPER(FIRST_NAME) = UPPER('LEX')) 
AND FIRST_NAME <> 'Susan' AND FIRST_NAME <> 'Lex';

--한명이상으로부터 보고를 받는다 = 나는 매니저로 등록되어있다. NULL= CEO
SELECT DISTINCT manager_id FROM employees WHERE MANAGER_ID IS NOT NULL OR manager_id IS NULL ORDER BY MANAGER_ID DESC;
SELECT DISTINCT manager_id FROM employees WHERE MANAGER_ID IS NOT NULL OR manager_id IS NULL;
SELECT DISTINCT manager_id AS "상사" FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, JOB_ID, DEPARTMENT_ID FROM EMPLOYEES 
WHERE manager_id IN(SELECT DISTINCT manager_id FROM EMPLOYEES);

SELECT JOB_ID FROM EMPLOYEES WHERE JOB_ID LIKE 'AC%';
SELECT FIRST_NAME, JOB_ID,DEPARTMENT_ID FROM EMPLOYEES WHERE JOB_ID IN(SELECT JOB_ID FROM EMPLOYEES WHERE JOB_ID LIKE 'AC%');

SELECT department_id FROM DEPARTMENTS WHERE UPPER(DEPARTMENT_NAME) = UPPER('ACCOUNTING');

SELECT FIRST_NAME, JOB_ID,DEPARTMENT_ID FROM EMPLOYEES 
WHERE department_id = (SELECT department_id FROM DEPARTMENTS WHERE DEPARTMENT_NAME ='Accounting')
AND JOB_ID IN(SELECT DISTINCT JOB_ID FROM EMPLOYEES WHERE DEPARTMENT_ID = 110);

SELECT DISTINCT JOB_ID FROM EMPLOYEES WHERE DEPARTMENT_ID = 110;

SELECT FIRST_NAME, JOB_ID,DEPARTMENT_ID FROM EMPLOYEES
WHERE JOB_ID IN(SELECT DISTINCT JOB_ID FROM EMPLOYEES WHERE DEPARTMENT_ID = 110);

--EXISTS
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID = 110;

--테이블 복사
DROP TABLE EMP02;
CREATE TABLE EMP02
AS
SELECT EMPLOYEE_ID, FIRST_NAME FROM EMPLOYEES;

SELECT * FROM EMP02;

-- 서브쿼리를 이용해서 데이터 복사
--구조만 복사 DEPARTMENTS 테이블 생성(DEP01)
CREATE TABLE DEP01
AS
SELECT * FROM DEPARTMENTS WHERE 1 = 0;

--내용을 서브쿼리를 이용해서 저장하시오
--INSERT INTO DEP01(컬럼명...) VALUES(컬럼값...)
INSERT INTO DEP01 (SELECT * FROM DEPARTMENTS);
SELECT * FROM DEP01;

--UPDATA 서브쿼리 활용한다
-- 부서 10번에 지역위치를 부서 40번 지역위치로 수정
UPDATE DEP01 SET LOCATION_ID = (2400) WHERE DEPARTMENT_ID = 10;
UPDATE DEP01 SET LOCATION_ID = (SELECT LOCATION_ID FROM DEPARTMENTS WHERE DEPARTMENT_ID = 40) WHERE DEPARTMENT_ID = 10;
SELECT * FROM department_ID = 10;
SELECT LOCATION_ID FROM DEPARTMENTS WHERE DEPARTMENT_ID = 40;
--문제3번
SELECT * FROM EMPLOYEES WHERE SALARY >5800 AND JOB_ID ='ST_MAN' AND EMPLOYEE_ID <>120;
SELECT MIN(SALARY) FROM EMPLOYEES WHERE JOB_ID = 'ST_MAN';

SELECT FIRST_NAME, SALARY, DEPARTMENT_ID FROM EMPLOYEES 
WHERE SALARY >(SELECT MIN(SALARY) FROM EMPLOYEES WHERE JOB_ID = 'ST_MAN') 
AND EMPLOYEE_ID <>20 ORDER BY EMPLOYEES.DEPARTMENT_ID ASC;

--문제 4번
SELECT SALARY FROM EMPLOYEES WHERE FIRST_NAME = 'Valli';
SELECT JOB_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Valli';
SELECT * FROM EMPLOYEES WHERE FIRST_NAME = 'Valli';

SELECT * FROM EMPLOYEES WHERE JOB_ID =(SELECT JOB_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Valli') 
AND SALARY=(SELECT SALARY FROM EMPLOYEES WHERE FIRST_NAME = 'Valli') 
AND FIRST_NAME <>'Valli';

--문제 5번
SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE FIRST_NAME='Valli';
SELECT ROUND(AVG(SALARY)) FROM EMPLOYEES WHERE DEPARTMENT_ID = 60;

SELECT DEPARTMENT_ID, FIRST_NAME, SALARY FROM EMPLOYEES 
WHERE SALARY > (SELECT ROUND(AVG(SALARY)) FROM EMPLOYEES WHERE DEPARTMENT_ID = 
(SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE FIRST_NAME='Valli'));

--샘플문제
SELECT SALARY FROM EMPLOYEES WHERE LAST_NAME = 'Tucker';

select first_name, last_name, job_id, salary from employees 
where salary >(SELECT SALARY FROM EMPLOYEES WHERE LAST_NAME = 'Tucker');

--문제 1번
select job_id ,min(salary)from employees group by job_id; 
select job_id,min(salary) from employees group by job_id;
select first_name, last_name, job_id, salary, hire_date from employees where job_id in(select job_id from employees group by job_id)
and salary in(select min(salary)from employees group by job_id); 

--문제 2번
select department_id ,round(avg(salary)) from employees group by department_id;

select first_name, last_name, job_id, salary, department_id from employees 
where salary > any(select round(avg(salary)) from employees group by department_id);

--문제 3번
select department_id ,round(avg(salary)) from employees group by department_id;

select first_name, job_id, department_id,(select round(avg(salary)) from employees where department_id = e.department_id)
as "Department Avg Salary" from employees e;
