--11/18 예제 과제
--시퀀스 생성
CREATE SEQUENCE GRADE_SEQ
START WITH 1
INCREMENT BY 1
MINVALUE 1
MAXVALUE 100000
NOCYCLE;
--테이블 생성
CREATE TABLE GRADE(
NO NUMBER(4),
NAME VARCHAR2(20) NOT NULL,
KOR NUMBER(4) NOT NULL,
ENG NUMBER(4) NOT NULL,
MATH NUMBER(4) NOT NULL,
TOTAL NUMBER(4) ,
AVG NUMBER(5,1) ,
RANK NUMBER(4) 
);
SELECT * FROM GRADE;
ALTER TABLE GRADE ADD CONSTRAINT GRADE_NO_PK PRIMARY KEY(NO);

--프리시저
CREATE OR REPLACE PROCEDURE GRADE_PROC_INPUT (
    VNO IN GRADE.NO%TYPE,
    VNAME IN GRADE.NAME%TYPE,
    VKOR IN GRADE.KOR%TYPE,
    VENG IN GRADE.ENG%TYPE,
    VMATH IN GRADE.MATH%TYPE
)
IS 
    VTOTAL NUMBER;
    VAVG NUMBER;
BEGIN
    VTOTAL := VKOR + VENG + VMATH;
    VAVG := (VTOTAL)/3;
    INSERT INTO GRADE(NO,NAME,KOR,ENG,MATH,TOTAL,AVG)
    VALUES (VNO,VNAME,VKOR,VENG,VMATH,VTOTAL,VAVG);
END;
/

EXECUTE GRADE_PROC_INPUT (1,'홍길동',99,80,85);
SELECT * FROM GRADE;

--트리거 생성

CREATE OR REPLACE TRIGGER GRADE_INSERT_TRG
AFTER INSERT
ON
GRADE
BEGIN
UPDATE GRADE SET TOTAL=(KOR+ENG+MATH);
UPDATE GRADE SET AVG=(KOR+ENG+MATH)/3;
END;
/

INSERT INTO GRADE(NO,NAME,KOR,ENG,MATH) VALUES(6,'종호',100,100,100);
--BEFORE
CREATE OR REPLACE TRIGGER GRADE_TRIGGER01
    BEFORE INSERT ON GRADE
    FOR EACH ROW
BEGIN
    :NEW.TOTAL := :NEW.KOR + :NEW.ENG + :NEW.MATH;
    :NEW.AVG := ROUND((:NEW.KOR + :NEW.ENG + :NEW.MATH) / 3, 1);
END;

/
INSERT INTO GRADE(NO,NAME,KOR,ENG,MATH) VALUES((SELECT NVL(MAX(NO),0)+1 FROM GRADE),DBMS_RANDOM.STRING('U',5),
ROUND(DBMS_RANDOM.VALUE(50,100)),ROUND(DBMS_RANDOM.VALUE(50,100)),ROUND(DBMS_RANDOM.VALUE(50,100)));

SELECT * FROM GRADE;
--RANK
CREATE OR REPLACE PROCEDURE GRADE_RANK_PROC
IS 

BEGIN
UPDATE GRADE G 
SET RANK=(SELECT G_RANK FROM(SELECT NO,RANK()OVER(ORDER BY AVG DESC) AS G_RANK FROM GRADE) WHERE G.NO=NO);
END;
/
EXECUTE GRADE_RANK_PROC;
SELECT * FROM GRADE ORDER BY RANK ASC, KOR DESC, ENG DESC, MATH DESC;
--윈도우 함수를 이용해서 생성
CREATE OR REPLACE PROCEDURE GRADE_RANK_PROC
IS 
    VSCORE_RT GRADE%ROWTYPE; 
    CURSOR C1 IS
    SELECT NO, NAME, TOTAL,RANK() OVER(ORDER BY TOTAL DESC) RANK FROM GRADE ORDER BY TOTAL DESC; 
BEGIN
    FOR  VSCORE_RT IN C1 LOOP
        UPDATE GRADE SET RANK = VSCORE_RT.RANK WHERE NO =  VSCORE_RT.NO; 
    END LOOP;
    COMMIT; 
END;
/
SELECT * FROM GRADE;
EXECUTE GRADE_RANK_PROC;








