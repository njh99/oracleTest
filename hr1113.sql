--Transction
drop TABLE DEP02;

--테이블 복사
CREATE TABLE DEP02
AS
SELECT * FROM DEPARTMENTS WHERE 1=0;

DESC DEP02
SELECT * FROM user_constraints WHERE TABLE_NAME = 'DEP02';

--내용복사
INSERT INTO DEP02 SELECT * FROM DEPARTMENTS;

SELECT * FROM DEP02;

ROLLBACK;


--VIEW 생성하기 (테이블 생성 복사하기와 같음)
CREATE VIEW VIEW_EMP01
AS
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, DEPARTMENT_ID FROM EMP_COPY WHERE DEPARTMENT_ID =10;


--EMPLOYEES 복사해서 EMP_COPY
CREATE TABLE EMP_COPY
AS
SELECT * FROM EMPLOYEES;
SELECT * FROM EMP_COPY;

--VIEW 제거하기
DROP VIEW VIEW_EMP01;


--VIEW 생성하기 (테이블 생성 복사하기와 같음)
CREATE VIEW VIEW_EMP01
AS
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, DEPARTMENT_ID FROM EMP_COPY WHERE DEPARTMENT_ID =10;


--SELECT 
SELECT * FROM VIEW_EMP01;
SELECT * FROM EMP_COPY WHERE EMPLOYEE_ID = 200;
--VIEW 수정하기 UPDATE
UPDATE VIEW_EMP01 SET SALARY = 4500 WHERE EMPLOYEE_ID = 200;

--DATA DICTIONARY(USER_TABS, USER_CONSTRAINTS, USER_CONS_COLUMNS, USER_VIEWS, USER_INDEXSM,user_sequences,USER_SOURCE)
SELECT * FROM USER_TABLES;
SELECT * FROM user_constraints;
SELECT * FROM user_cons_columns;
SELECT * FROM USER_VIEWS;
SELECT * FROM USER_INDEXS;

--가상뷰에 INSERT(현재 가상테이블에 컬럼 4개입력, 만약 원본에 10개인데 그중에 NOT NULL이 있으면 입력 불가능)
INSERT INTO VIEW_EMP01 VALUES(1000,'NJH',10000,0825);
SELECT * FROM VIEW_EMP01;
SELECT * FROM USER_CONSRT;

--VIEW 생성하기 (테이블 생성 복사하기와 같음)
CREATE VIEW VIEW_EMP02
AS
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME,EMAIL,HIRE_DATE,JOB_ID, DEPARTMENT_ID FROM EMP_COPY WHERE DEPARTMENT_ID =10;

SELECT * FROM VIEW_EMP02;
INSERT INTO VIEW_EMP02 VALUES(1000,'JongHo','NA','HELLO@NAVER.COM',TO_DATE('2020/01/01','YYYY/MM/DD'),'IT_DEV',100);
SELECT * FROM EMP_COPY WHERE EMPLOYEE_ID=1000;
DESC EMP_COPY;

--VIEW 3번째 생성

CREATE VIEW VIEW_EMP03
AS
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME,EMAIL,HIRE_DATE,JOB_ID, DEPARTMENT_ID FROM EMP_COPY;

SELECT * FROM VIEW_EMP03 WHERE employee_id=1000;
INSERT INTO VIEW_EMP03 VALUES(1000,'JongHo','NA','HELLO@NAVER.COM',TO_DATE('2020/01/01','YYYY/MM/DD'),'IT_DEV',100);
SELECT * FROM EMP_COPY WHERE EMPLOYEE_ID=1000;

--가상뷰에서 삭제를 진행
DELETE FROM VIEW_EMP03 WHERE employee_id = 1000;

--복합뷰 생성하기(EMPLOYEES,DEPARTMENTS 두개 테이블을 조인해서 새로운 가상 테이블 생성)
CREATE OR REPLACE VIEW VIEW_EMP_DEP
AS
SELECT employee_id,FIRST_NAME, SALARY,E.department_id,DEPARTMENT_NAME,LOCATION_ID
FROM EMPLOYEES E INNER JOIN DEPARTMENTS D ON e.department_id = d.department_id
ORDER BY E.DEPARTMENT_ID DESC WITH READ ONLY;

SELECT * FROM VIEW_EMP_DEP;
SELECT DISTINCT department_id, DEPARTMENT_NAME FROM VIEW_EMP_DEP;
--부서명 IT 연봉 평균, 최고값, 최저값
SELECT DEPARTMENT_NAME, MAX(SALARY),MIN(SALARY) FROM VIEW_EMP_DEP WHERE DEPARTMENT_NAME = 'IT' GROUP BY DEPARTMENT_NAME;

--VIEW FORCE
CREATE OR REPLACE FORCE VIEW VIEW_FORCE
AS
SELECT EMPLOYEE_ID, FIRST_NAME,LAST_NAME,DEPARTMENT_ID FROM EMP20;

DESC VIEW_FORCE;

SELECT * FROM USER_VIEWS;

--ROWNUM
SELECT * FROM EMPLOYEES;
SELECT ROWNUM,DEPARTMENT_ID,employee_id, FIRST_NAME FROM EMPLOYEES WHERE DEPARTMENT_ID=100
ORDER BY FIRST_NAME DESC;

SELECT ROWNUM,DEPARTMENT_ID,employee_id, FIRST_NAME FROM EMPLOYEES WHERE DEPARTMENT_ID=100;

--ROWNUM 정렬하면 순서가 흐트러진것을 다시 순서적으로 보여주고 싶을때
SELECT ROWNUM,EMPLOYEE_ID, FIRST_NAME, HIRE_DATE FROM EMPLOYEES ORDER BY HIRE_DATE DESC;


CREATE OR REPLACE VIEW VIEW_HIREDATE
AS
SELECT EMPLOYEE_ID, FIRST_NAME, HIRE_DATE FROM EMPLOYEES ORDER BY HIRE_DATE DESC;

SELECT ROWNUM, EMPLOYEE_ID, FIRST_NAME, HIRE_DATE FROM VIEW_HIREDATE WHERE ROWNUM = 4;


SELECT ROWNUM, EMPLOYEE_ID, FIRST_NAME, HIRE_DATE FROM
(SELECT EMPLOYEE_ID, FIRST_NAME, HIRE_DATE FROM EMPLOYEES ORDER BY HIRE_DATE DESC)
WHERE ROWNUM <=4;

--과제
--문제 1번
CREATE VIEW VIEW_LOC
AS
SELECT EMPLOYEE_ID, FIRST_NAME,E.DEPARTMENT_ID, DEPARTMENT_NAME,LOCATION_ID
FROM EMPLOYEES E INNER JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;
SELECT * FROM VIEW_LOC;
--문제 2번
CREATE VIEW VIEW_DEPT30
AS
SELECT FIRST_NAME, HIRE_DATE, DEPARTMENT_NAME
FROM EMPLOYEES E INNER JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE E.DEPARTMENT_ID = 30;
SELECT * FROM VIEW_DEPT30;
--문제 3번
CREATE VIEW VIEW_DEPT_MAXSAL
AS
SELECT * FROM EMPLOYEES;
SELECT DEPARTMENT_ID, MAX(SALARY) FROM VIEW_DEPT_MAXSAL GROUP BY DEPARTMENT_ID;
--문제 4번
CREATE VIEW VIEW_SAL_TOP3
AS
SELECT SALARY, FIRST_NAME, employee_id FROM EMPLOYEES ORDER BY SALARY DESC;
SELECT * FROM VIEW_SAL_TOP3;
SELECT ROWNUM, SALARY, FIRST_NAME, employee_id FROM VIEW_SAL_TOP3 WHERE ROWNUM <= 3;

SELECT ROWNUM, SALARY, FIRST_NAME, employee_id FROM
(SELECT SALARY, FIRST_NAME, employee_id FROM EMPLOYEES ORDER BY SALARY DESC)
WHERE ROWNUM <= 3 ORDER BY SALARY DESC;






